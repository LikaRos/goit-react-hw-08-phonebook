{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML\\\\REACT\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactsList\\\\ContactsList.jsx\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsList = _ref => {\n  let {\n    contactsList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: contactsList.map(_ref2 => {\n      let {\n        id,\n        name,\n        phone\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone: \", phone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactsList;\nContactsList.propTypes = {\n  contactsList: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired\n  }))\n}; // commit\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["D:/HTML/REACT/goit-react-hw-02-phonebook/src/components/ContactsList/ContactsList.jsx"],"names":["PropTypes","ContactsList","contactsList","map","id","name","phone","propTypes","arrayOf","shape","string","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AACA,OAAO,MAAMC,YAAY,GAAG,QAAsB;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAChD,sBACE;AAAA,cACGA,YAAY,CAACC,GAAb,CAAiB,SAAyB;AAAA,UAAxB;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAwB;AACzC,0BACE;AAAA,gCACE;AAAA,+BAAUD,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,gCAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAASF,EAAT;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbM;KAAMH,Y;AAcbA,YAAY,CAACM,SAAb,GAAyB;AACvBL,EAAAA,YAAY,EAAEF,SAAS,CAACQ,OAAV,CACZR,SAAS,CAACS,KAAV,CAAgB;AACdJ,IAAAA,IAAI,EAAEL,SAAS,CAACU,MAAV,CAAiBC,UADT;AAEdP,IAAAA,EAAE,EAAEJ,SAAS,CAACU,MAAV,CAAiBC,UAFP;AAGdL,IAAAA,KAAK,EAAEN,SAAS,CAACU,MAAV,CAAiBC;AAHV,GAAhB,CADY;AADS,CAAzB,C,CASA","sourcesContent":["import PropTypes from 'prop-types';\r\nexport const ContactsList = ({ contactsList }) => {\r\n  return (\r\n    <ul>\r\n      {contactsList.map(({ id, name, phone }) => {\r\n        return (\r\n          <li key={id}>\r\n            <p>Name: {name}</p>\r\n            <p>Phone: {phone}</p>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\nContactsList.propTypes = {\r\n  contactsList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      phone: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n// commit\r\n"]},"metadata":{},"sourceType":"module"}