{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML\\\\REACT\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\App.jsx\";\nimport { Component } from 'react';\nimport { ContactForm } from './ContactForm/ContactForm';\nimport { ContactsList } from './ContactsList/ContactsList';\nimport { ContactFilter } from './ContactFilter/ContactFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.addContactData = _ref => {\n      let {\n        name,\n        phone,\n        id\n      } = _ref;\n      const contact = {\n        name,\n        phone,\n        id\n      };\n      const newContact = this.state.contacts.find(contact => contact.name === name);\n\n      if (newContact) {\n        alert(`{name} is already in contact`);\n      }\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact]\n      }));\n    };\n\n    this.handlerFilter = _ref2 => {\n      let {\n        target: {\n          value\n        }\n      } = _ref2;\n      this.setState({\n        filter: value\n      });\n    };\n\n    this.getVisableContacts = () => {\n      const {\n        filter,\n        contacts\n      } = this.state;\n      return contacts.filter(_ref3 => {\n        let {\n          name\n        } = _ref3;\n        return name.toLowerCase().includes(filter.toLowerCase());\n      });\n    };\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        addContactData: this.addContactData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactFilter, {\n        filter: filter,\n        handlerFilter: this.handlerFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n        contactsList: this.getVisableContacts()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/HTML/REACT/goit-react-hw-02-phonebook/src/components/App.jsx"],"names":["Component","ContactForm","ContactsList","ContactFilter","App","state","contacts","filter","addContactData","name","phone","id","contact","newContact","find","alert","setState","prevState","handlerFilter","target","value","getVisableContacts","toLowerCase","includes","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,aAAT,QAA8B,+BAA9B;;AACA,OAAO,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCK,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,MAAM,EAAE;AAFF,KADyB;;AAAA,SAMjCC,cANiC,GAMhB,QAAyB;AAAA,UAAxB;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,OAAwB;AACxC,YAAMC,OAAO,GAAG;AAAEH,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,OAAhB;AACA,YAAME,UAAU,GAAG,KAAKR,KAAL,CAAWC,QAAX,CAAoBQ,IAApB,CACjBF,OAAO,IAAIA,OAAO,CAACH,IAAR,KAAiBA,IADX,CAAnB;;AAGA,UAAII,UAAJ,EAAgB;AACdE,QAAAA,KAAK,CAAE,8BAAF,CAAL;AACD;;AAED,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BX,QAAAA,QAAQ,EAAE,CAAC,GAAGW,SAAS,CAACX,QAAd,EAAwBM,OAAxB;AADgB,OAAL,CAAvB;AAGD,KAlBgC;;AAAA,SAmBjCM,aAnBiC,GAmBjB,SAA2B;AAAA,UAA1B;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAA0B;AACzC,WAAKJ,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEa;AAAV,OAAd;AACD,KArBgC;;AAAA,SAsBjCC,kBAtBiC,GAsBZ,MAAM;AACzB,YAAM;AAAEd,QAAAA,MAAF;AAAUD,QAAAA;AAAV,UAAuB,KAAKD,KAAlC;AACA,aAAOC,QAAQ,CAACC,MAAT,CAAgB;AAAA,YAAC;AAAEE,UAAAA;AAAF,SAAD;AAAA,eACrBA,IAAI,CAACa,WAAL,GAAmBC,QAAnB,CAA4BhB,MAAM,CAACe,WAAP,EAA5B,CADqB;AAAA,OAAhB,CAAP;AAGD,KA3BgC;AAAA;;AA6BjCE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA;AAAF,QAAa,KAAKF,KAAxB;AAEA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,WAAD;AAAa,QAAA,cAAc,EAAE,KAAKG;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAOE,QAAC,aAAD;AAAe,QAAA,MAAM,EAAED,MAAvB;AAA+B,QAAA,aAAa,EAAE,KAAKW;AAAnD;AAAA;AAAA;AAAA;AAAA,cAPF,eASE,QAAC,YAAD;AAAc,QAAA,YAAY,EAAE,KAAKG,kBAAL;AAA5B;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA7CgC","sourcesContent":["import { Component } from 'react';\r\nimport { ContactForm } from './ContactForm/ContactForm';\r\nimport { ContactsList } from './ContactsList/ContactsList';\r\nimport { ContactFilter } from './ContactFilter/ContactFilter';\r\nexport class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  addContactData = ({ name, phone, id }) => {\r\n    const contact = { name, phone, id };\r\n    const newContact = this.state.contacts.find(\r\n      contact => contact.name === name\r\n    );\r\n    if (newContact) {\r\n      alert(`{name} is already in contact`);\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, contact],\r\n    }));\r\n  };\r\n  handlerFilter = ({ target: { value } }) => {\r\n    this.setState({ filter: value });\r\n  };\r\n  getVisableContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n\r\n        <ContactForm addContactData={this.addContactData} />\r\n\r\n        <h2>Contacts</h2>\r\n\r\n        <ContactFilter filter={filter} handlerFilter={this.handlerFilter} />\r\n\r\n        <ContactsList contactsList={this.getVisableContacts()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}