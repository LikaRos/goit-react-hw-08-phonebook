{"ast":null,"code":"var _jsxFileName = \"D:\\\\HTML\\\\REACT\\\\goit-react-hw-02-phonebook\\\\src\\\\components\\\\ContactForm\\\\ContactForm.jsx\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Form extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: ''\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target: {\n          name,\n          value\n        }\n      } = _ref;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      const id = nanoid();\n      const contact = { ...this.state,\n        id\n      };\n      this.props.addContactData(contact);\n    };\n  }\n\n  render() {\n    const {\n      contacts,\n      name\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/HTML/REACT/goit-react-hw-02-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["Component","nanoid","Form","state","contacts","name","handleChange","target","value","setState","onSubmit","event","preventDefault","id","contact","props","addContactData","render","email"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,OAAO,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAClCG,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE;AAFA,KAD0B;;AAAA,SAMlCC,YANkC,GAMnB,QAAiC;AAAA,UAAhC;AAAEC,QAAAA,MAAM,EAAE;AAAEF,UAAAA,IAAF;AAAQG,UAAAA;AAAR;AAAV,OAAgC;AAC9C,WAAKC,QAAL,CAAc;AAAE,SAACJ,IAAD,GAAQG;AAAV,OAAd;AACD,KARiC;;AAAA,SASlCE,QATkC,GASvBC,KAAK,IAAI;AAClBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,EAAE,GAAGZ,MAAM,EAAjB;AAEA,YAAMa,OAAO,GAAG,EAAE,GAAG,KAAKX,KAAV;AAAiBU,QAAAA;AAAjB,OAAhB;AAEA,WAAKE,KAAL,CAAWC,cAAX,CAA0BF,OAA1B;AACD,KAhBiC;AAAA;;AAkBlCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAqB,KAAKF,KAAhC;AACA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKO,QAArB;AAAA,8BACE;AAAA,wCAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,OAAO,EAAC,wHAHV;AAIE,UAAA,KAAK,EAAC,wIAJR;AAKE,UAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAEQ,KAHT;AAIE,UAAA,QAAQ,EAAE,KAAKZ;AAJjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AA7CiC","sourcesContent":["import { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport class Form extends Component {\r\n  state = {\r\n    contacts: [],\r\n    name: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    const id = nanoid();\r\n\r\n    const contact = { ...this.state, id };\r\n\r\n    this.props.addContactData(contact);\r\n  };\r\n\r\n  render() {\r\n    const { contacts, name } = this.state;\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}