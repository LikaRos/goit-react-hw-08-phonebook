{"version":3,"file":"static/js/511.e82d40d6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.jsx","views/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { nanoid } from 'nanoid';\nimport styles from './ContactForm.module.css';\nimport { useState } from 'react';\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport function ContactForm() {\n  const items = useSelector(state => state.contacts.items);\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const id = nanoid();\n    const contact = { name, phone, id };\n    const oldContact = items.find(item => item.name === contact.name);\n    if (oldContact) {\n      return alert(`${name} is already in contact`);\n    }\n    dispatch(fetchAddContact(contact));\n    setName('');\n    setPhone('');\n  };\n  return (\n    <>\n      <form className={styles.form} onSubmit={onSubmit}>\n        <h1>Phonebook</h1>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Phone\n          <input\n            className={styles.input}\n            type=\"phone\"\n            name=\"phone\"\n            value={phone}\n            required\n            onChange={handleChange}\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add contacts\n        </button>\n      </form>\n    </>\n  );\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"ContactList_text__SgE1+\",\"item\":\"ContactList_item__8cNgf\",\"textWrap\":\"ContactList_textWrap__Psswd\",\"button\":\"ContactList_button__AKIJH\",\"input\":\"ContactList_input__pTLKD\"};","import styles from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\n\nexport const ContactsList = () => {\n  const items = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => dispatch(fetchDeleteContact(id));\n\n  const getVisableContacts = () => {\n    console.log(items);\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  console.log(filter);\n  return (\n    <ul>\n      {getVisableContacts().map(({ id, name, phone }) => {\n        return (\n          <li className={styles.item} key={id}>\n            <div className={styles.textWrap}>\n              <p className={styles.text}>Name: {name}</p>\n              <p className={styles.text}>Phone: {phone}</p>\n            </div>\n\n            <div className={styles.btnWrap}>\n              <button\n                className={styles.button}\n                type=\"button\"\n                onClick={() => handleDelete(id)}\n              >\n                Delete\n              </button>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactFilter_form__RBCmO\",\"label\":\"ContactFilter_label__qRVzC\",\"input\":\"ContactFilter_input__8mWOi\"};","import styles from './ContactFilter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterUser } from 'redux/contacts/contacts-actions';\n\nexport const ContactFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.contacts.filter);\n  const handlerFilter = event => {\n    dispatch(filterUser(event.target.value));\n  };\n  return (\n    <>\n      <form className={styles.form}>\n        <h2>Contacts</h2>\n        <label className={styles.label}>\n          Find contacts by name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={filter}\n            onChange={handlerFilter}\n          />\n        </label>\n      </form>\n    </>\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactsList } from '../components/ContactsList/ContactsList';\nimport { ContactFilter } from '../components/ContactFilter/ContactFilter';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <ContactFilter />\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["ContactForm","items","useSelector","state","contacts","useState","name","setName","phone","setPhone","dispatch","useDispatch","handleChange","event","target","value","className","styles","onSubmit","preventDefault","id","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","contact","find","item","alert","fetchAddContact","type","pattern","title","required","onChange","ContactsList","filter","console","log","toLowerCase","includes","map","onClick","fetchDeleteContact","handleDelete","ContactFilter","filterUser","ContactsView","useEffect","fetchContacts"],"sourceRoot":""}